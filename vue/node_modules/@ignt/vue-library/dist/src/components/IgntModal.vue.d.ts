declare const _sfc_main: import("vue").DefineComponent<{
    visible: {
        type: BooleanConstructor;
        defaultsTo: boolean;
    };
    title: {
        type: StringConstructor;
        defaultsTo: any;
    };
    submitButton: {
        type: BooleanConstructor;
        defaultsTo: boolean;
    };
    closeIcon: {
        type: BooleanConstructor;
        defaultsTo: boolean;
    };
    cancelButton: {
        type: BooleanConstructor;
        defaultsTo: boolean;
    };
}, {
    emit: (event: "close" | "submit", ...args: any[]) => void;
    props: any;
    escapeHandler: (evt: {
        key: string;
    }) => void;
    IgntButton: import("vue").DefineComponent<{
        busy: {
            type: import("vue").PropType<boolean>;
            default: boolean;
        };
        link: {
            type: import("vue").PropType<string>;
        };
        href: {
            type: import("vue").PropType<string>;
        };
        target: {
            type: import("vue").PropType<string>;
        };
        type: {
            type: import("vue").PropType<string>;
            default: () => string;
        };
        disabled: {
            type: import("vue").PropType<boolean>;
            default: boolean;
        };
    }, {
        IgntLoadingIcon: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>;
    }, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
        busy: {
            type: import("vue").PropType<boolean>;
            default: boolean;
        };
        link: {
            type: import("vue").PropType<string>;
        };
        href: {
            type: import("vue").PropType<string>;
        };
        target: {
            type: import("vue").PropType<string>;
        };
        type: {
            type: import("vue").PropType<string>;
            default: () => string;
        };
        disabled: {
            type: import("vue").PropType<boolean>;
            default: boolean;
        };
    }>>, {
        type: string;
        busy: boolean;
        disabled: boolean;
    }>;
    IgntTimesIcon: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>;
    IgntCard: import("vue").DefineComponent<{}, {}, {}, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{}>>, {}>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("close" | "submit")[], "close" | "submit", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    visible: {
        type: BooleanConstructor;
        defaultsTo: boolean;
    };
    title: {
        type: StringConstructor;
        defaultsTo: any;
    };
    submitButton: {
        type: BooleanConstructor;
        defaultsTo: boolean;
    };
    closeIcon: {
        type: BooleanConstructor;
        defaultsTo: boolean;
    };
    cancelButton: {
        type: BooleanConstructor;
        defaultsTo: boolean;
    };
}>> & {
    onClose?: (...args: any[]) => any;
    onSubmit?: (...args: any[]) => any;
}, {
    visible: boolean;
    submitButton: boolean;
    closeIcon: boolean;
    cancelButton: boolean;
}>;
export default _sfc_main;
