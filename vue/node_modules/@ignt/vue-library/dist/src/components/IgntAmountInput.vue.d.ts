import { type PropType } from "vue";
declare const _sfc_main: import("vue").DefineComponent<{
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    maxDecimals: {
        type: PropType<number>;
        default: number;
    };
    placeholder: {
        type: PropType<string>;
        default: string;
    };
}, {
    props: any;
    emit: (event: "update", ...args: any[]) => void;
    inputRef: any;
    format: (value: string) => string;
    model: import("vue").WritableComputedRef<string>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, "update"[], "update", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    modelValue: {
        type: (StringConstructor | NumberConstructor)[];
        default: string;
    };
    maxDecimals: {
        type: PropType<number>;
        default: number;
    };
    placeholder: {
        type: PropType<string>;
        default: string;
    };
}>> & {
    onUpdate?: (...args: any[]) => any;
}, {
    modelValue: string | number;
    maxDecimals: number;
    placeholder: string;
}>;
export default _sfc_main;
