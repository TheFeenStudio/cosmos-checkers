import { type PropType } from "vue";
declare const _sfc_main: import("vue").DefineComponent<{
    tabHeaderClasses: PropType<string[]>;
    tabLinkClasses: {
        type: PropType<string[]>;
        default: () => any[];
    };
    activeLinkClasses: {
        type: PropType<string[]>;
        default: () => any[];
    };
    inactiveLinkClasses: {
        type: PropType<string[]>;
        default: () => any[];
    };
    tabContentClasses: PropType<string[]>;
}, {
    slots: Readonly<{
        [name: string]: import("vue").Slot;
    }>;
    tabs: import("vue").Ref<{
        title: string;
        content: unknown;
    }[]>;
    tabElement: Nullable<HTMLElement>;
    active: import("vue").Ref<number>;
    setActive: (slot: number) => void;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    tabHeaderClasses: PropType<string[]>;
    tabLinkClasses: {
        type: PropType<string[]>;
        default: () => any[];
    };
    activeLinkClasses: {
        type: PropType<string[]>;
        default: () => any[];
    };
    inactiveLinkClasses: {
        type: PropType<string[]>;
        default: () => any[];
    };
    tabContentClasses: PropType<string[]>;
}>>, {
    tabLinkClasses: string[];
    activeLinkClasses: string[];
    inactiveLinkClasses: string[];
}>;
export default _sfc_main;
